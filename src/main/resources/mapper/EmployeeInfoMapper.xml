<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.igeekhome.colloa.mapper.EmployeeInfoMapper">
  <resultMap id="BaseResultMap" type="com.igeekhome.colloa.domain.EmployeeInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="empl_code" jdbcType="CHAR" property="emplCode" />
    <result column="company_code" jdbcType="CHAR" property="companyCode" />
    <result column="depa_code" jdbcType="CHAR" property="depaCode" />
    <result column="header_code" jdbcType="CHAR" property="headerCode" />
    <result column="work_status" jdbcType="INTEGER" property="workStatus" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="tel" jdbcType="CHAR" property="tel" />
    <result column="mobile_tel" jdbcType="CHAR" property="mobileTel" />
    <result column="email" jdbcType="CHAR" property="email" />
    <result column="wechat" jdbcType="CHAR" property="wechat" />
    <result column="position_code" jdbcType="CHAR" property="positionCode" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="entry_time" jdbcType="DATE" property="entryTime" />
    <result column="regular_time" jdbcType="DATE" property="regularTime" />
    <result column="dimission_time" jdbcType="DATE" property="dimissionTime" />
    <result column="self_desc" jdbcType="VARCHAR" property="selfDesc" />
    <result column="resume_desc" jdbcType="VARCHAR" property="resumeDesc" />
    <result column="native_place" jdbcType="CHAR" property="nativePlace" />
    <result column="nation" jdbcType="CHAR" property="nation" />
    <result column="political_status" jdbcType="CHAR" property="politicalStatus" />
    <result column="marital_status" jdbcType="INTEGER" property="maritalStatus" />
    <result column="id_num" jdbcType="CHAR" property="idNum" />
    <result column="domicile_place" jdbcType="CHAR" property="domicilePlace" />
    <result column="address" jdbcType="CHAR" property="address" />
    <result column="college" jdbcType="CHAR" property="college" />
    <result column="education" jdbcType="INTEGER" property="education" />
    <result column="major" jdbcType="CHAR" property="major" />
    <result column="academic_ref" jdbcType="CHAR" property="academicRef" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="account" jdbcType="CHAR" property="account" />
    <result column="avatar_url" jdbcType="CHAR" property="avatarUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, empl_code, company_code, depa_code, header_code, work_status, name, gender, tel, 
    mobile_tel, email, wechat, position_code, birthday, entry_time, regular_time, dimission_time, 
    self_desc, resume_desc, native_place, nation, political_status, marital_status, id_num, 
    domicile_place, address, college, education, major, academic_ref, hobby, status, 
    account, avatar_url
  </sql>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from employee_info
  </select>

  <select id="selectByExample" parameterType="com.igeekhome.colloa.domain.EmployeeInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from employee_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.igeekhome.colloa.domain.EmployeeInfoExample">
    delete from employee_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.igeekhome.colloa.domain.EmployeeInfo">
    insert into employee_info (id, empl_code, company_code, 
      depa_code, header_code, work_status, 
      name, gender, tel, mobile_tel, 
      email, wechat, position_code, 
      birthday, entry_time, regular_time, 
      dimission_time, self_desc, resume_desc, 
      native_place, nation, political_status, 
      marital_status, id_num, domicile_place, 
      address, college, education, 
      major, academic_ref, hobby, 
      status, account, avatar_url
      )
    values (#{id,jdbcType=BIGINT}, #{emplCode,jdbcType=CHAR}, #{companyCode,jdbcType=CHAR}, 
      #{depaCode,jdbcType=CHAR}, #{headerCode,jdbcType=CHAR}, #{workStatus,jdbcType=INTEGER}, 
      #{name,jdbcType=CHAR}, #{gender,jdbcType=INTEGER}, #{tel,jdbcType=CHAR}, #{mobileTel,jdbcType=CHAR}, 
      #{email,jdbcType=CHAR}, #{wechat,jdbcType=CHAR}, #{positionCode,jdbcType=CHAR}, 
      #{birthday,jdbcType=DATE}, #{entryTime,jdbcType=DATE}, #{regularTime,jdbcType=DATE}, 
      #{dimissionTime,jdbcType=DATE}, #{selfDesc,jdbcType=VARCHAR}, #{resumeDesc,jdbcType=VARCHAR}, 
      #{nativePlace,jdbcType=CHAR}, #{nation,jdbcType=CHAR}, #{politicalStatus,jdbcType=CHAR}, 
      #{maritalStatus,jdbcType=INTEGER}, #{idNum,jdbcType=CHAR}, #{domicilePlace,jdbcType=CHAR}, 
      #{address,jdbcType=CHAR}, #{college,jdbcType=CHAR}, #{education,jdbcType=INTEGER}, 
      #{major,jdbcType=CHAR}, #{academicRef,jdbcType=CHAR}, #{hobby,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{account,jdbcType=CHAR}, #{avatarUrl,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.igeekhome.colloa.domain.EmployeeInfo">
    insert into employee_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="emplCode != null">
        empl_code,
      </if>
      <if test="companyCode != null">
        company_code,
      </if>
      <if test="depaCode != null">
        depa_code,
      </if>
      <if test="headerCode != null">
        header_code,
      </if>
      <if test="workStatus != null">
        work_status,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="mobileTel != null">
        mobile_tel,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
      <if test="positionCode != null">
        position_code,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="entryTime != null">
        entry_time,
      </if>
      <if test="regularTime != null">
        regular_time,
      </if>
      <if test="dimissionTime != null">
        dimission_time,
      </if>
      <if test="selfDesc != null">
        self_desc,
      </if>
      <if test="resumeDesc != null">
        resume_desc,
      </if>
      <if test="nativePlace != null">
        native_place,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="politicalStatus != null">
        political_status,
      </if>
      <if test="maritalStatus != null">
        marital_status,
      </if>
      <if test="idNum != null">
        id_num,
      </if>
      <if test="domicilePlace != null">
        domicile_place,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="academicRef != null">
        academic_ref,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="emplCode != null">
        #{emplCode,jdbcType=CHAR},
      </if>
      <if test="companyCode != null">
        #{companyCode,jdbcType=CHAR},
      </if>
      <if test="depaCode != null">
        #{depaCode,jdbcType=CHAR},
      </if>
      <if test="headerCode != null">
        #{headerCode,jdbcType=CHAR},
      </if>
      <if test="workStatus != null">
        #{workStatus,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=CHAR},
      </if>
      <if test="mobileTel != null">
        #{mobileTel,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=CHAR},
      </if>
      <if test="wechat != null">
        #{wechat,jdbcType=CHAR},
      </if>
      <if test="positionCode != null">
        #{positionCode,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="entryTime != null">
        #{entryTime,jdbcType=DATE},
      </if>
      <if test="regularTime != null">
        #{regularTime,jdbcType=DATE},
      </if>
      <if test="dimissionTime != null">
        #{dimissionTime,jdbcType=DATE},
      </if>
      <if test="selfDesc != null">
        #{selfDesc,jdbcType=VARCHAR},
      </if>
      <if test="resumeDesc != null">
        #{resumeDesc,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null">
        #{nativePlace,jdbcType=CHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=CHAR},
      </if>
      <if test="politicalStatus != null">
        #{politicalStatus,jdbcType=CHAR},
      </if>
      <if test="maritalStatus != null">
        #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="idNum != null">
        #{idNum,jdbcType=CHAR},
      </if>
      <if test="domicilePlace != null">
        #{domicilePlace,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=CHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=CHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        #{major,jdbcType=CHAR},
      </if>
      <if test="academicRef != null">
        #{academicRef,jdbcType=CHAR},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=CHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.igeekhome.colloa.domain.EmployeeInfoExample" resultType="java.lang.Long">
    select count(*) from employee_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.emplCode != null">
        empl_code = #{record.emplCode,jdbcType=CHAR},
      </if>
      <if test="record.companyCode != null">
        company_code = #{record.companyCode,jdbcType=CHAR},
      </if>
      <if test="record.depaCode != null">
        depa_code = #{record.depaCode,jdbcType=CHAR},
      </if>
      <if test="record.headerCode != null">
        header_code = #{record.headerCode,jdbcType=CHAR},
      </if>
      <if test="record.workStatus != null">
        work_status = #{record.workStatus,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=CHAR},
      </if>
      <if test="record.mobileTel != null">
        mobile_tel = #{record.mobileTel,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=CHAR},
      </if>
      <if test="record.wechat != null">
        wechat = #{record.wechat,jdbcType=CHAR},
      </if>
      <if test="record.positionCode != null">
        position_code = #{record.positionCode,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.entryTime != null">
        entry_time = #{record.entryTime,jdbcType=DATE},
      </if>
      <if test="record.regularTime != null">
        regular_time = #{record.regularTime,jdbcType=DATE},
      </if>
      <if test="record.dimissionTime != null">
        dimission_time = #{record.dimissionTime,jdbcType=DATE},
      </if>
      <if test="record.selfDesc != null">
        self_desc = #{record.selfDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.resumeDesc != null">
        resume_desc = #{record.resumeDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.nativePlace != null">
        native_place = #{record.nativePlace,jdbcType=CHAR},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=CHAR},
      </if>
      <if test="record.politicalStatus != null">
        political_status = #{record.politicalStatus,jdbcType=CHAR},
      </if>
      <if test="record.maritalStatus != null">
        marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="record.idNum != null">
        id_num = #{record.idNum,jdbcType=CHAR},
      </if>
      <if test="record.domicilePlace != null">
        domicile_place = #{record.domicilePlace,jdbcType=CHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=CHAR},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=CHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=INTEGER},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=CHAR},
      </if>
      <if test="record.academicRef != null">
        academic_ref = #{record.academicRef,jdbcType=CHAR},
      </if>
      <if test="record.hobby != null">
        hobby = #{record.hobby,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=CHAR},
      </if>
      <if test="record.avatarUrl != null">
        avatar_url = #{record.avatarUrl,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee_info
    set id = #{record.id,jdbcType=BIGINT},
      empl_code = #{record.emplCode,jdbcType=CHAR},
      company_code = #{record.companyCode,jdbcType=CHAR},
      depa_code = #{record.depaCode,jdbcType=CHAR},
      header_code = #{record.headerCode,jdbcType=CHAR},
      work_status = #{record.workStatus,jdbcType=INTEGER},
      name = #{record.name,jdbcType=CHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      tel = #{record.tel,jdbcType=CHAR},
      mobile_tel = #{record.mobileTel,jdbcType=CHAR},
      email = #{record.email,jdbcType=CHAR},
      wechat = #{record.wechat,jdbcType=CHAR},
      position_code = #{record.positionCode,jdbcType=CHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      entry_time = #{record.entryTime,jdbcType=DATE},
      regular_time = #{record.regularTime,jdbcType=DATE},
      dimission_time = #{record.dimissionTime,jdbcType=DATE},
      self_desc = #{record.selfDesc,jdbcType=VARCHAR},
      resume_desc = #{record.resumeDesc,jdbcType=VARCHAR},
      native_place = #{record.nativePlace,jdbcType=CHAR},
      nation = #{record.nation,jdbcType=CHAR},
      political_status = #{record.politicalStatus,jdbcType=CHAR},
      marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      id_num = #{record.idNum,jdbcType=CHAR},
      domicile_place = #{record.domicilePlace,jdbcType=CHAR},
      address = #{record.address,jdbcType=CHAR},
      college = #{record.college,jdbcType=CHAR},
      education = #{record.education,jdbcType=INTEGER},
      major = #{record.major,jdbcType=CHAR},
      academic_ref = #{record.academicRef,jdbcType=CHAR},
      hobby = #{record.hobby,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      account = #{record.account,jdbcType=CHAR},
      avatar_url = #{record.avatarUrl,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.igeekhome.colloa.domain.EmployeeInfo">
    update employee_info
    <set>
      <if test="emplCode != null">
        empl_code = #{emplCode,jdbcType=CHAR},
      </if>
      <if test="companyCode != null">
        company_code = #{companyCode,jdbcType=CHAR},
      </if>
      <if test="depaCode != null">
        depa_code = #{depaCode,jdbcType=CHAR},
      </if>
      <if test="headerCode != null">
        header_code = #{headerCode,jdbcType=CHAR},
      </if>
      <if test="workStatus != null">
        work_status = #{workStatus,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=CHAR},
      </if>
      <if test="mobileTel != null">
        mobile_tel = #{mobileTel,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=CHAR},
      </if>
      <if test="positionCode != null">
        position_code = #{positionCode,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="entryTime != null">
        entry_time = #{entryTime,jdbcType=DATE},
      </if>
      <if test="regularTime != null">
        regular_time = #{regularTime,jdbcType=DATE},
      </if>
      <if test="dimissionTime != null">
        dimission_time = #{dimissionTime,jdbcType=DATE},
      </if>
      <if test="selfDesc != null">
        self_desc = #{selfDesc,jdbcType=VARCHAR},
      </if>
      <if test="resumeDesc != null">
        resume_desc = #{resumeDesc,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null">
        native_place = #{nativePlace,jdbcType=CHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=CHAR},
      </if>
      <if test="politicalStatus != null">
        political_status = #{politicalStatus,jdbcType=CHAR},
      </if>
      <if test="maritalStatus != null">
        marital_status = #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="idNum != null">
        id_num = #{idNum,jdbcType=CHAR},
      </if>
      <if test="domicilePlace != null">
        domicile_place = #{domicilePlace,jdbcType=CHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=CHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=CHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=CHAR},
      </if>
      <if test="academicRef != null">
        academic_ref = #{academicRef,jdbcType=CHAR},
      </if>
      <if test="hobby != null">
        hobby = #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=CHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.igeekhome.colloa.domain.EmployeeInfo">
    update employee_info
    set empl_code = #{emplCode,jdbcType=CHAR},
      company_code = #{companyCode,jdbcType=CHAR},
      depa_code = #{depaCode,jdbcType=CHAR},
      header_code = #{headerCode,jdbcType=CHAR},
      work_status = #{workStatus,jdbcType=INTEGER},
      name = #{name,jdbcType=CHAR},
      gender = #{gender,jdbcType=INTEGER},
      tel = #{tel,jdbcType=CHAR},
      mobile_tel = #{mobileTel,jdbcType=CHAR},
      email = #{email,jdbcType=CHAR},
      wechat = #{wechat,jdbcType=CHAR},
      position_code = #{positionCode,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      entry_time = #{entryTime,jdbcType=DATE},
      regular_time = #{regularTime,jdbcType=DATE},
      dimission_time = #{dimissionTime,jdbcType=DATE},
      self_desc = #{selfDesc,jdbcType=VARCHAR},
      resume_desc = #{resumeDesc,jdbcType=VARCHAR},
      native_place = #{nativePlace,jdbcType=CHAR},
      nation = #{nation,jdbcType=CHAR},
      political_status = #{politicalStatus,jdbcType=CHAR},
      marital_status = #{maritalStatus,jdbcType=INTEGER},
      id_num = #{idNum,jdbcType=CHAR},
      domicile_place = #{domicilePlace,jdbcType=CHAR},
      address = #{address,jdbcType=CHAR},
      college = #{college,jdbcType=CHAR},
      education = #{education,jdbcType=INTEGER},
      major = #{major,jdbcType=CHAR},
      academic_ref = #{academicRef,jdbcType=CHAR},
      hobby = #{hobby,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      account = #{account,jdbcType=CHAR},
      avatar_url = #{avatarUrl,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>